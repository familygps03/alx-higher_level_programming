#include "lists.h"

/**
 * check_cycle - Checks if a linked list has a loop.
 * @list: Pointer to the head of the linked list.
 *
 * Return: 1 if the linked list has a loop, 0 otherwise.
 **/
int check_cycle(listint_t *list)
{
	listint_t *slow_ptr, *fast_ptr;
	slow_ptr = fast_ptr = list;
	if (list == NULL)
        return (0);

    while (slow_ptr && fast_ptr && fast_ptr->next)
    {
        slow_ptr = slow_ptr->next;
        fast_ptr = fast_ptr->next->next;

        if (slow_ptr == fast_ptr)
        {
            return (1);  /* Linked list has a loop */
        }
    }

    return (0);  /* No loop in the linked list */
}
